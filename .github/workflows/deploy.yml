name: Deploy PriceHawk

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for deployment (e.g. v1.0.0)'
        required: false
        default: 'v1.0.0'

jobs:
  backup:
    name: Pre-Deployment Backup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --force
      
      - name: Create .env file with DB credentials
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "SITEGROUND_SSH_HOST=${{ secrets.SITEGROUND_SSH_HOST }}" >> .env
          echo "SITEGROUND_SSH_USERNAME=${{ secrets.SITEGROUND_SSH_USERNAME }}" >> .env
      
      - name: Set up SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SITEGROUND_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SITEGROUND_SSH_HOST }}
      
      # Known hosts already added by the ssh-key-action
      
      - name: Execute remote backup
        id: backup
        run: |
          VERSION="${{ github.event.inputs.version || 'v1.0.0' }}"
          node scripts/execute-remote-backup.js "$VERSION"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SITEGROUND_SSH_HOST: ${{ secrets.SITEGROUND_SSH_HOST }}
          SITEGROUND_SSH_USERNAME: ${{ secrets.SITEGROUND_SSH_USERNAME }}

  deploy:
    name: Deploy Application
    needs: backup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --force
      
      - name: Create .env file
        run: |
          echo "NODE_ENV=production" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_APP_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_APP_VERSION=1.0.0" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env
          echo "STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}" >> .env
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}" >> .env
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> .env
          echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" >> .env
          echo "SENDGRID_FROM_EMAIL=${{ secrets.SENDGRID_FROM_EMAIL }}" >> .env
          echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .env
          echo "REDIS_TOKEN=${{ secrets.REDIS_TOKEN }}" >> .env
          echo "ENABLE_REAL_TIME_SCRAPING=true" >> .env
          echo "ENABLE_SCHEDULED_CHECKS=true" >> .env
          echo "ENABLE_SUBSCRIPTIONS=true" >> .env
          echo "ENABLE_EMAIL_NOTIFICATIONS=true" >> .env
      
      # Skip database migrations in CI/CD 
      - name: Skip database migrations
        run: |
          echo "Skipping database migrations in CI/CD pipeline"
          echo "Migrations should be run manually on the server after deployment"
      
      - name: Build application
        run: npm run build
      
      - name: Deploy to SiteGround via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.SITEGROUND_FTP_SERVER }}
          username: ${{ secrets.SITEGROUND_FTP_USERNAME }}
          password: ${{ secrets.SITEGROUND_FTP_PASSWORD }}
          local-dir: ./.next/
          server-dir: /public_html/
      
      - name: Copy server files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.SITEGROUND_FTP_SERVER }}
          username: ${{ secrets.SITEGROUND_FTP_USERNAME }}
          password: ${{ secrets.SITEGROUND_FTP_PASSWORD }}
          local-dir: ./
          server-dir: /
          exclude: |
            **/*
            !server.js
            !package.json
            !package-lock.json
            !.env
            !lib/websockets.js
      
      - name: Install dependencies and restart on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SITEGROUND_SSH_HOST }}
          username: ${{ secrets.SITEGROUND_SSH_USERNAME }}
          key: ${{ secrets.SITEGROUND_SSH_PRIVATE_KEY }}
          script: |
            cd ~/public_html
            npm install --production
            pm2 restart pricehawk || pm2 start npm --name pricehawk -- start
      
      - name: Verify deployment
        run: |
          sleep 30
          curl -f ${{ secrets.NEXTAUTH_URL }}/api/health || exit 1
