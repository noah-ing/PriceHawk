name: Deploy PriceHawk

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --force
      
      - name: Create .env file
        run: |
          echo "NODE_ENV=production" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_APP_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_APP_VERSION=1.0.0" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env
          echo "STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}" >> .env
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}" >> .env
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> .env
          echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" >> .env
          echo "SENDGRID_FROM_EMAIL=${{ secrets.SENDGRID_FROM_EMAIL }}" >> .env
          echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .env
          echo "REDIS_TOKEN=${{ secrets.REDIS_TOKEN }}" >> .env
          echo "ENABLE_REAL_TIME_SCRAPING=true" >> .env
          echo "ENABLE_SCHEDULED_CHECKS=true" >> .env
          echo "ENABLE_SUBSCRIPTIONS=true" >> .env
          echo "ENABLE_EMAIL_NOTIFICATIONS=true" >> .env
      
      # Add the SSH key to GitHub Actions runner
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.SITEGROUND_SSH_PRIVATE_KEY }}' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "ssh.pricehawk.app ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE6D4TAKK3nOP+izh2ZDzoWy5tE4KglnCFpVBg7jQm4G" >> ~/.ssh/known_hosts
      
      - name: Run database migrations via SSH tunnel
        run: |
          # Create SSH tunnel to the database
          ssh -i ~/.ssh/id_ed25519 -p 18765 u2854-mdygfp1biij7@ssh.pricehawk.app -L 5433:pg.siteground.biz:5432 -N -f -o "StrictHostKeyChecking=no"
          TUNNEL_PID=$!
          
          # Give the tunnel time to establish
          sleep 5
          
          # Get DATABASE_URL from environment and modify it to use the tunnel
          ORIGINAL_URL=${{ secrets.DATABASE_URL }}
          export DATABASE_URL="${ORIGINAL_URL/pg.siteground.biz:5432/localhost:5433}"
          
          # Run migrations
          npx prisma migrate deploy
          
          # Kill the SSH tunnel
          if [ ! -z "$TUNNEL_PID" ]; then
            kill $TUNNEL_PID
          fi
      
      - name: Build application
        run: npm run build
      
      - name: Create pre-deployment backup
        run: node scripts/pre-deployment-backup.js v1.0.0
      
      - name: Deploy to SiteGround via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.SITEGROUND_FTP_SERVER }}
          username: ${{ secrets.SITEGROUND_FTP_USERNAME }}
          password: ${{ secrets.SITEGROUND_FTP_PASSWORD }}
          local-dir: ./.next/
          server-dir: /public_html/
      
      - name: Copy server files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.SITEGROUND_FTP_SERVER }}
          username: ${{ secrets.SITEGROUND_FTP_USERNAME }}
          password: ${{ secrets.SITEGROUND_FTP_PASSWORD }}
          local-dir: ./
          server-dir: /
          exclude: |
            **/*
            !server.js
            !package.json
            !package-lock.json
            !.env
            !lib/websockets.js
      
      - name: Install dependencies and restart on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SITEGROUND_SSH_HOST }}
          username: ${{ secrets.SITEGROUND_SSH_USERNAME }}
          password: ${{ secrets.SITEGROUND_SSH_PASSWORD }}
          script: |
            cd ~/public_html
            npm install --production
            pm2 restart pricehawk || pm2 start npm --name pricehawk -- start
      
      - name: Verify deployment
        run: |
          sleep 30
          curl -f ${{ secrets.NEXTAUTH_URL }}/api/health || exit 1
